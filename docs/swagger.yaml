basePath: /
definitions:
  handlers.AddMenuItemRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  handlers.AssignRoleRequest:
    properties:
      role:
        type: string
    required:
    - role
    type: object
  handlers.CreateMenuRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  handlers.CreateRestaurantRequest:
    properties:
      address:
        type: string
      name:
        type: string
    required:
    - address
    - name
    type: object
  handlers.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - password
    - phone_number
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      phone_number:
        type: string
    required:
    - password
    - phone_number
    type: object
  handlers.RequestCodeRequest:
    properties:
      phone_number:
        type: string
    required:
    - phone_number
    type: object
  handlers.RequestEmailCodeRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.SetDailyMenuRequest:
    properties:
      menu_id:
        type: integer
    required:
    - menu_id
    type: object
  handlers.UpdateMenuItemRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  handlers.UpdateMenuRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  handlers.UpdateRestaurantRequest:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      password:
        description: Optional
        type: string
      phone_number:
        type: string
    type: object
  handlers.VerifyCodeRequest:
    properties:
      code:
        type: string
      phone_number:
        type: string
    required:
    - code
    - phone_number
    type: object
  handlers.VerifyEmailCodeRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  models.Menu:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.MenuItem'
        type: array
      name:
        type: string
      restaurant_id:
        type: integer
      updated_at:
        type: string
    required:
    - name
    type: object
  models.MenuItem:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      menu_id:
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    required:
    - name
    - price
    type: object
  models.Restaurant:
    properties:
      address:
        type: string
      created_at:
        type: string
      daily_menu_id:
        type: integer
      id:
        type: integer
      menus:
        items:
          $ref: '#/definitions/models.Menu'
        type: array
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - address
    - name
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      phone_number:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Go project with restaurant menu features.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: My Project API
  version: "1.0"
paths:
  /api/v1/menu-items/{item_id}:
    delete:
      description: Delete a menu item by its ID (owner or admin only)
      parameters:
      - description: Menu Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a menu item
      tags:
      - menu-items
    put:
      consumes:
      - application/json
      description: Update a menu item's information (owner or admin only)
      parameters:
      - description: Menu Item ID
        in: path
        name: item_id
        required: true
        type: integer
      - description: Menu item info
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateMenuItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MenuItem'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a menu item
      tags:
      - menu-items
  /api/v1/menus/{menu_id}:
    delete:
      description: Delete a menu by its ID (owner or admin only)
      parameters:
      - description: Menu ID
        in: path
        name: menu_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a menu
      tags:
      - menus
    get:
      description: Get details for a single menu, including its items
      parameters:
      - description: Menu ID
        in: path
        name: menu_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a menu by ID
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: Update a menu's name (owner or admin only)
      parameters:
      - description: Menu ID
        in: path
        name: menu_id
        required: true
        type: integer
      - description: Menu info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateMenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a menu
      tags:
      - menus
  /api/v1/menus/{menu_id}/items:
    post:
      consumes:
      - application/json
      description: Adds a new item to a menu (owner or admin only)
      parameters:
      - description: Menu ID
        in: path
        name: menu_id
        required: true
        type: integer
      - description: Menu item info
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/handlers.AddMenuItemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.MenuItem'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add a menu item
      tags:
      - menus
  /api/v1/restaurants:
    post:
      consumes:
      - application/json
      description: Creates a new restaurant for the authenticated user
      parameters:
      - description: Restaurant info
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRestaurantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new restaurant
      tags:
      - restaurants
  /api/v1/restaurants/{id}:
    delete:
      description: Delete a restaurant by its ID (owner or admin only)
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a restaurant
      tags:
      - restaurants
    get:
      description: Get details for a single restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a restaurant by ID
      tags:
      - restaurants
    put:
      consumes:
      - application/json
      description: Update a restaurant's information (owner or admin only)
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Restaurant info
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateRestaurantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a restaurant
      tags:
      - restaurants
  /api/v1/restaurants/{id}/daily-menu:
    put:
      consumes:
      - application/json
      description: Sets a specific menu as the daily menu for a restaurant (owner
        or admin only)
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Daily Menu info
        in: body
        name: daily_menu
        required: true
        schema:
          $ref: '#/definitions/handlers.SetDailyMenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Set the daily menu for a restaurant
      tags:
      - restaurants
  /api/v1/restaurants/{id}/menus:
    post:
      consumes:
      - application/json
      description: Creates a new menu for a restaurant (owner or admin only)
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Menu info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateMenuRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Menu'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new menu
      tags:
      - menus
  /api/v1/restaurants/{id}/qrcode:
    get:
      description: Generates and returns a QR code image linking to the restaurant's
        menu URL
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: QR code image
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Generate a QR code for a restaurant's menu
      tags:
      - restaurants
  /api/v1/users:
    get:
      description: Get a list of all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      description: Delete a user by their ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a single user by their ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's information (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
  /api/v1/users/{id}/role:
    put:
      consumes:
      - application/json
      description: Assign a new role to a user (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handlers.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Assign a role to a user
      tags:
      - users
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user with phone number and password
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logs in a user
      tags:
      - auth
  /login/email/request:
    post:
      consumes:
      - application/json
      description: Sends a verification code to the user's email
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestEmailCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Requests an email verification code
      tags:
      - auth
  /login/email/verify:
    post:
      consumes:
      - application/json
      description: Verifies the email code and returns a JWT
      parameters:
      - description: Email and code
        in: body
        name: verification
        required: true
        schema:
          $ref: '#/definitions/handlers.VerifyEmailCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verifies an email code
      tags:
      - auth
  /login/sms/request:
    post:
      consumes:
      - application/json
      description: Sends a verification code to the user's phone number
      parameters:
      - description: Phone number
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Requests an SMS verification code
      tags:
      - auth
  /login/sms/verify:
    post:
      consumes:
      - application/json
      description: Verifies the SMS code and returns a JWT
      parameters:
      - description: Phone number and code
        in: body
        name: verification
        required: true
        schema:
          $ref: '#/definitions/handlers.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verifies an SMS code
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Creates a new user with phone number, email, and password
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
